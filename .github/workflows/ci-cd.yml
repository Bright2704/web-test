name: CI/CD with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_docker_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2


##รัน sonaqube
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  

      - name: Install dependencies
        run: npm install

      - name: Scan with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # รหัสผ่านหรือ token สำหรับการเข้าถึง SonarQube
        run: |
          sonar-scanner -Dsonar.projectKey=test-erp \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://host.docker.internal:9000 \
                        -Dsonar.login=$SONAR_TOKEN
################################

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/test:${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_docker_image
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Server
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}  
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}  
          SERVER_IP: ${{ secrets.SERVER_IP }}       
          DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/test:${{ github.run_number }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SERVER_IP "
            docker pull $DOCKER_IMAGE &&
            docker stop test-web || true &&
            docker rm test-web || true &&
            docker run -d --name test-web $DOCKER_IMAGE
          "
